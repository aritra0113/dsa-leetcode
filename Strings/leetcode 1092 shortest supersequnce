class Solution {
    public String shortestCommonSupersequence(String str1, String str2) {

        int n1=str1.length();
        int n2=str2.length();

        int dp[][]=new int[n1+1][n2+1];

        for(int i=1;i<n1+1;i++)
        {
            for(int j=1;j<n2+1;j++)
            {
                if(str1.charAt(i-1)==str2.charAt(j-1))
                {
                    dp[i][j]=1+dp[i-1][j-1];

                }
                else
                dp[i][j]=0+Math.max(dp[i-1][j],dp[i][j-1]);
            }
        }
        String ans="";

        while(n1!=0 && n2!=0 )
        {
            if(str1.charAt(n1-1)==str2.charAt(n2-1))
           { ans=Character.toString(str1.charAt(n1-1))+ans;
            n1--;
            n2--;}
            else if(dp[n1-1][n2]>dp[n1][n2-1])
            {
                ans=Character.toString(str1.charAt(n1-1))+ans;
                n1--;
                
            }
            else
            {
                ans=Character.toString(str2.charAt(n2-1))+ans;
                n2--;
            }
        }
        while(n1!=0)
        {
            ans=Character.toString(str1.charAt(n1-1))+ans;
            n1--;
        }
         while(n2!=0)
        {
            ans=Character.toString(str2.charAt(n2-1))+ans;
            n2--;
        }
        return ans;

        
    }
}
