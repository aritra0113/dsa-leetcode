/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {

        List<List<Integer>> ans=new ArrayList<>();

        if(root==null)return ans;

        Deque<TreeNode> q=new ArrayDeque<>();
        q.add(root);

        boolean swap=false;

        while(!q.isEmpty())
        {

            int size=q.size();

            List<Integer> level=new ArrayList<>(size);

            for(int i=0;i<size;i++)
            {

                if(!swap)
                {
                    TreeNode c=q.pollFirst();
                    level.add(c.val);
                    if(c.left!=null)q.addLast(c.left);
                 if(c.right!=null)q.addLast(c.right);
                }
                else
                {
                    TreeNode c=q.pollLast();
                    level.add(c.val);
                    
                 if(c.right!=null)q.addFirst(c.right);
                 if(c.left!=null)q.addFirst(c.left);
                }
                

                

            }
            swap=!swap;
            
            ans.add(level);
        }

        return ans;

        
    }
}
