//merge sort 

import java.util.Arrays;

public class mergeortinplace {


     public static void main(String[] args) {

    int [] arr={4,5,1,3,2};
    /* for(int element:arr)
    {
        System.out.println(element);
    } */
    mergeinplace(arr,0,arr.length);
   /*  for(int element:arr)
    {
        System.out.println(element);
    }
    System.out.println();
     */

     System.out.println(Arrays.toString(arr));
    
}

public static void mergeinplace(int arr [],int s,int e)
{
    if(e-s==1)//base condition
    {
        return;
    }

    int mid=(s+e)/2;

    //it invokes 2 recurrsive call to mimic the division of the array
    mergeinplace(arr,s,mid);
    mergeinplace(arr,mid,e);

    merge(arr,s,mid,e);



}
public static void merge(int arr [],int s,int mid,int e)
{
    int i=s,j=mid,k=0;
    int mix[]=new int[e-s];
    while(i<mid && j<e)
    {
        if(arr[i]<=arr[j])
        {
            mix[k++]=arr[i++];
        }
        else
        {
            mix[k++]=arr[j++];
        }
    
    }
    while(i<mid)
    {
        mix[k++]=arr[i++];
    }
    while(j<e)
    {
        mix[k++]=arr[j++];
    }

    for(int l=0;l<mix.length;l++)
    {
        arr[s+l]=mix[l];
    }
}

}
