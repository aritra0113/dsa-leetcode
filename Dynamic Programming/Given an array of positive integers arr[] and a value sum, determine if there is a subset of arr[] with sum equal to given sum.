//Subset Sum Problem 
//Given an array of positive integers arr[] and a value sum, determine if there is a subset of arr[] with sum equal to given sum. 
//recurrsion solution
class Solution {

    static Boolean isSubsetSum(int arr[], int sum) {
        // code here
        return f(arr.length-1,sum,arr);
    }
    public static Boolean f(int ind,int target,int []arr)
    {
        if(target==0)return true;
        if(ind==0)return(arr[0]==target);
        
        boolean no=f(ind-1,target,arr);
        boolean yes =false;
        if(arr[ind]<=target)
        yes=f(ind-1,target-arr[ind],arr);
        
        return yes||no;
    }
}
//memoization technique

class Solution {

    static Boolean isSubsetSum(int arr[], int sum) {
        // code here
        int dp[][]=new int[arr.length][sum+1];
        for(int i=0;i<dp.length;i++)
        {
            Arrays.fill(dp[i],-1);
        }
        return f(arr.length-1,sum,arr,dp);
    }
    public static Boolean f(int ind,int target,int []arr,int [][]dp)
    {
        if(target==0)return true;
        if(ind==0)return(arr[0]==target);
        if(dp[ind][target]!=-1)return (dp[ind][target]==1);
        boolean no=f(ind-1,target,arr,dp);
        boolean yes =false;
        if(arr[ind]<=target)
        yes=f(ind-1,target-arr[ind],arr,dp);
        
        boolean result=yes||no;
        dp[ind][target]=result?1:0;
        return result;
    }
}
