Input: amount = 5, coins = [1,2,5]
Output: 4
Explanation: there are four ways to make up the amount:
5=5
5=2+2+1
5=2+1+1+1
5=1+1+1+1+1
//tabulation
class Solution {
    public int change(int amount, int[] coins) {

        int n=coins.length;
        

        int dp[][]=new int[n][amount+1];

        
        for(int t=0;t<=amount;t++)
        {
            if(t%coins[0]==0)
            dp[0][t]=1;
        }
        for(int i=1;i<n;i++)
        {
            for(int j=0;j<=amount;j++)
            {
                int notake=dp[i-1][j];
                int take=0;
               if(j>=coins[i])
        { 
        take=dp[i][j-coins[i]];}
       
         dp[i][j]=take+notake;
            }
        }
        return dp[n-1][amount];
       
        
    }
    
}

//memoization

public int f(int n,int []coins, int t,int dp[][])

    {
        if(t==0)return 1;
        if(t<0||n<0)return 0;
        if(dp[n][t]!=-1)return dp[n][t];
        int notake =f(n-1,coins,t,dp);
        int take =0;
        if(t>=coins[n])
        { 
        take=f(n,coins,t-coins[n],dp);}
       
        return dp[n][t]=take+notake;
    }
