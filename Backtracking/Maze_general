import java.util.ArrayList;
import java.util.List;
//backtracking
public class Maze_all {
 public static void main(String[] args) {
        
        //List<String> j=path("",3,3,new ArrayList<>());
        boolean[][] maze={
            {true,true,true},
            {true,true,true},
            {true,true,true},
        };
       // System.out.println(maze.length);

        List<String> y=pathreturn("",0,0,maze);
        System.out.println(y);
    }




    
    static List<String> pathreturn(String p,int r,int c,boolean[][] maze)
    {
        List<String> list=new ArrayList<>();
        if(r==2 && c==2)
        {
            list.add(p);
            return list;
        }
        if(!maze[r][c])
        return list;
        else
    
        {
            maze[r][c]=false;
            if(r!=2)
        {
    list.addAll(pathreturn( p+"D",r+1,c,maze));
        }
         if(c!=2)
         {
     list.addAll(pathreturn( p+"R",r,c+1,maze));

    }
    
    if(r!=0)
        {
    list.addAll(pathreturn( p+"U",r-1,c,maze));
        }

        if(c!=0)
        {
    list.addAll(pathreturn( p+"L",r,c-1,maze));
        }
    
        maze[r][c]=true; //reversing the change of false
        
    return list;
    
}
    }

}
