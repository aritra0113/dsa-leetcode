class Solution {
    public List<List<Integer>> permute(int[] nums) {

        List<List<Integer>> ans=new ArrayList<>();
        List<Integer> ds=new ArrayList<>();
        boolean map[]=new boolean[nums.length];
        permute(ans,ds,map,nums);
        return ans;
        
    }
    public void permute(List<List<Integer>> ans,List<Integer> ds,
    boolean map[],int[] nums)
    {
        if(ds.size()==nums.length)
            {
                ans.add(new ArrayList<>(ds));
                return;
            }

        for(int i=0;i<nums.length;i++)
        {
            
            if(!map[i])
            {
                map[i]=true;
                ds.add(nums[i]);
                permute(ans,ds,map,nums);
                ds.remove(ds.size()-1);
                map[i]=false;
            }
        }
    }
}
